//
// project_PoseGallery.xcconfig
// PoseGallery
//
// Copyright (c) 2015 Trollwerks Inc. All rights reserved.
//

// for Slather's coveralls.io support

//# https://github.com/venmo/slather/issues/39 -- track Swift support status
GCC_GENERATE_TEST_COVERAGE_FILES = NO
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS = NO

// Environment and processing management

//SDKROOT = iphoneos
//IPHONEOS_DEPLOYMENT_TARGET = 7.0
// 1 = iPhone; 2 = iPad; 1,2 = iPhone/iPad
//TARGETED_DEVICE_FAMILY = 1,2
///ARCHS = armv7 armv7s arm64
//ARCHS = $(ARCHS_STANDARD_INCLUDING_64_BIT)

//CODE_SIGN_ENTITLEMENTS = PosesPro2/PosesPro.entitlements

// undoes all our external compression, and isn't that useful anyways
//COMPRESS_PNG_FILES = NO

// always want a .dSYM file for symbolicating crash reports
//GCC_GENERATE_DEBUGGING_SYMBOLS = YES

//ALWAYS_SEARCH_USER_PATHS = NO
//GCC_VERSION = com.apple.compilers.llvm.clang.1_0
//GCC_C_LANGUAGE_STANDARD = gnu99 // c99 strict ANSI confuses GLKit
//CLANG_CXX_LANGUAGE_STANDARD = gnu++0x
//CLANG_CXX_LIBRARY = libc++
//CLANG_ENABLE_OBJC_ARC = YES
//CLANG_ENABLE_MODULES = YES
//GCC_ENABLE_OBJC_EXCEPTIONS = YES
//GCC_FAST_OBJC_DISPATCH = YES
//GCC_PRECOMPILE_PREFIX_HEADER = YES
//GCC_INCREASE_PRECOMPILED_HEADER_SHARING = YES

//INFOPLIST_PREPROCESS = YES
// from http://developer.apple.com/technotes/tn2007/tn2175.html to not mess up // as a comment
// and don't forget &amp; for & in strings, like URLs, or put them in InfoPlist.strings perhaps
//INFOPLIST_OTHER_PREPROCESSOR_FLAGS = -traditional

// Compiler/analyzer warning management

CLANG_ANALYZER_DEADCODE_DEADSTORES = YES
CLANG_ANALYZER_MEMORY_MANAGEMENT = YES
CLANG_ANALYZER_GCD = YES
CLANG_ANALYZER_OBJC_ATSYNC = YES
CLANG_ANALYZER_OBJC_NSCFERROR = YES
CLANG_ANALYZER_OBJC_INCOMP_METHOD_TYPES = YES
CLANG_ANALYZER_OBJC_COLLECTIONS = YES
CLANG_ANALYZER_OBJC_UNUSED_IVARS = YES
CLANG_ANALYZER_OBJC_SELF_INIT = YES
CLANG_ANALYZER_OBJC_RETAIN_COUNT = YES
CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES
CLANG_ANALYZER_SECURITY_KEYCHAIN_API = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK = YES

CLANG_WARN__ARC_BRIDGE_CAST_NONARC = YES
//CLANG_WARN_ASSIGN_ENUM = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_CXX0X_EXTENSIONS = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
//CLANG_WARN_DOCUMENTATION_COMMENTS = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_ENUM_CONVERSION = YES
//CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_OBJC_EXPLICIT_OWNERSHIP_TYPE = YES
//CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES
//CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
//CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS = YES
//CLANG_WARN_OBJC_RECEIVER_WEAK = YES
//CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR
//CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES
CLANG_WARN_UNREACHABLE_CODE = YES
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN__EXIT_TIME_DESTRUCTORS = YES

GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES
GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS  = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES
GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS = YES
GCC_WARN_ABOUT_MISSING_NEWLINE = YES
//GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES
GCC_WARN_ABOUT_POINTER_SIGNEDNESS = YES
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL = YES
GCC_WARN_CHECK_SWITCH_STATEMENTS = YES
GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES
GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES
CC_WARN_MISSING_PARENTHESES = YES
GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES
//GCC_WARN_SHADOW = YES
//GCC_WARN_SIGN_COMPARE = YES
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE
//GCC_WARN_UNKNOWN_PRAGMAS = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_LABEL = YES
//GCC_WARN_UNUSED_PARAMETER = YES
GCC_WARN_UNUSED_VALUE = YES
GCC_WARN_UNUSED_VARIABLE = YES
//GCC_WARN_MULTIPLE_DEFINITION_TYPES_FOR_SELECTOR = YES
//GCC_WARN_PEDANTIC = YES
//GCC_WARN_STRICT_SELECTOR_MATCH = YES

// exclusions we intend:
// warning: auto property synthesis is synthesizing property not explicitly synthesized [-Wobjc-missing-property-synthesis]
// warning: $X is a language extension [-Wpedantic]
// exclusions we're tolerating for now:
//WARNING_EXCLUSIONS = -Wno-objc-missing-property-synthesis -Wno-pedantic

//WARNING_CFLAGS = -Weverything $(WARNING_EXCLUSIONS)


// merge flag/path settings with possible previous configuration file flag settings
// to change in target.xcconfig, use $(inherited) then overrides


//WARNING_CFLAGS = $(inherited) $(TWX_BASE_WARNING_CFLAGS) $(TWX_CONFIGURATION_WARNING_CFLAGS)
//WARNING_CFLAGS = -Weverything $(TWX_BASE_WARNING_EXCLUSIONS) $(TWX_CONFIGURATION_WARNING_EXCLUSIONS)

//OTHER_CFLAGS = $(inherited) $(TWX_CONFIGURATION_OTHER_CFLAGS)

//GCC_PREPROCESSOR_DEFINITIONS = $(inherited) CONFIGURATION_$(CONFIGURATION) $(TWX_CONFIGURATION_GCC_PREPROCESSOR_DEFINITIONS)

// zip: -lz C++: -lstdc++ frameworks: -ObjC ARC (if project not): -fobjc-arc
//OTHER_LDFLAGS = $(inherited) $(TWX_CONFIGURATION_OTHER_LDFLAGS)


// Search path management

//LIBRARY_AIRSHIP_PATH = "$(SRCROOT)/PosesPro2/source/libraries/Airship"
//FRAMEWORK_CRASHLYTICS_PATH = "$(SRCROOT)"
//LIBRARY_FLURRY_PATH = "$(SRCROOT)/PosesPro2/source/libraries/Flurry"

//HEADER_SEARCH_PATHS = $(inherited) $(TWX_CONFIGURATION_HEADER_SEARCH_PATHS)
//LIBRARY_SEARCH_PATHS = $(inherited) $(TWX_CONFIGURATION_LIBRARY_SEARCH_PATHS) $(LIBRARY_AIRSHIP_PATH) $(LIBRARY_FLURRY_PATH)
//FRAMEWORK_SEARCH_PATHS = $(inherited) $(TWX_CONFIGURATION_FRAMEWORK_SEARCH_PATHS) $(FRAMEWORK_CRASHLYTICS_PATH)

// ********************************************

//
//  TWXProjectDebug.xcconfig
//
//  Copyright 2013 Trollwerks Inc. All rights reserved.
//

//CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Developer
//CODE_SIGN_ENTITLEMENTS = config/TWEntitlementsDebug.plist

//TWX_CONFIGURATION_GCC_PREPROCESSOR_DEFINITIONS = DEBUG=1

//ONLY_ACTIVE_ARCH = YES
//GCC_OPTIMIZATION_LEVEL = 0
//DEAD_CODE_STRIPPING = NO
//DEPLOYMENT_POSTPROCESSING = NO
//STRIP_INSTALLED_PRODUCT = NO // "Strip Linked Product"
//COPY_PHASE_STRIP = NO // "Strip Debug Symbols During Copy"
//LD_GENERATE_MAP_FILE = YES

//ENABLE_NS_ASSERTIONS = YES
//GCC_TREAT_WARNINGS_AS_ERRORS = NO
//VALIDATE_PRODUCT = NO

//#include "TWXProjectBase.xcconfig"

// ********************************************

//
//  TWXProjectRelease.xcconfig
//
//  Copyright 2013 Trollwerks Inc. All rights reserved.
//

//CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Distribution: Trollwerks Inc.
//CODE_SIGN_ENTITLEMENTS = config/TWEntitlementsRelease.plist

//TWX_CONFIGURATION_GCC_PREPROCESSOR_DEFINITIONS = NDEBUG=1 NS_BLOCK_ASSERTIONS=1

//ONLY_ACTIVE_ARCH = NO
//GCC_OPTIMIZATION_LEVEL = s
//DEAD_CODE_STRIPPING = YES
// should be able to symbolicate with the .dSYM
//DEPLOYMENT_POSTPROCESSING = YES
//STRIP_INSTALLED_PRODUCT = YES // "Strip Linked Product"
//COPY_PHASE_STRIP = YES // "Strip Debug Symbols During Copy"

//ENABLE_NS_ASSERTIONS = NO
//GCC_TREAT_WARNINGS_AS_ERRORS = YES
//VALIDATE_PRODUCT = YES

//#include "TWXProjectBase.xcconfig"

